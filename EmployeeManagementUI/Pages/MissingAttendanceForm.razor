@page "/missingattendanceform"
@page "/missingattendanceform/{id:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>@(isEdit ? "Approve/Reject Missing Attendance" : "Mark Missing Attendance")</h3>

<EditForm Model="request" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @if (!isEdit)
    {
        <div class="form-group">
            <label>Employee ID:</label>
            <InputNumber class="form-control" @bind-Value="request.employeeID" />
        </div>
    }

    <div class="form-group">
        <label>Date:</label>
        <InputDate class="form-control" @bind-Value="request.date" />
    </div>


    <div class="form-group">
        <label>Status (In/Out):</label>
        <InputText class="form-control" @bind-Value="request.status" />
    </div>
    
    @if (isEdit)
    {
        
        <div class="form-group">
            <label>Approved By (Employee ID):</label>
            <InputText class="form-control" @bind-Value="request.approvedBy" />
        </div>
    }
    else
    {
    }


    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [Parameter] public int? id { get; set; }
    private MissingAttendanceRequest request = new MissingAttendanceRequest();
    private bool isEdit = false;

    protected override async Task OnInitializedAsync()
    {
        if (id.HasValue)
        {
            isEdit = true;
            request = await Http.GetFromJsonAsync<MissingAttendanceRequest>($"api/missingattendancerequests/{id.Value}");
        }
    }

    async Task HandleValidSubmit()
    {
        if (isEdit)
            await Http.PutAsJsonAsync($"api/missingattendancerequests/{request.requestID}", request);
        else
            await Http.PostAsJsonAsync("api/missingattendancerequests/mark", request);

        NavigationManager.NavigateTo("/missingattendance");
    }

    public class MissingAttendanceRequest
    {
        public int requestID { get; set; }
        public int employeeID { get; set; }
        public DateTime date { get; set; }
        public string status { get; set; }
        public string? approvedBy { get; set; }
    }
}
